spring.application.name=databaseRelation


#spring.jpa.hibernate.ddl-auto=update
#spring.datasource.url=jdbc:mysql://localhost:3306/mydatabase
#spring.datasource.username=myuser
#spring.datasource.password=secret
#spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
#spring.jpa.show-sql: true


#spring.datasource.url=jdbc:postgresql://localhost:5432/dataRelationship
#spring.datasource.username=yourUsername
#spring.datasource.password=new life
#spring.datasource.driver-class-name=org.postgresql.Driver

spring.datasource.username = postgres
spring.datasource.password = new life
spring.datasource.url = jdbc:postgresql://localhost:5432/dataRelationship

spring.jpa.hibernate.ddl-auto=create
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

spring.jpa.show-sql=true

logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE

# Gmail SMTP server
spring.mail.host=smtp.gmail.com

# Gmail SMTP server port
spring.mail.port=587

# Gmail SMTP server username (your Gmail email address)
spring.mail.username=asif.raza@gmail.com

# Gmail SMTP server password (your Gmail password or App password)
spring.mail.password=your-email-password

# SMTP properties
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

# Default encoding
spring.mail.default-encoding=UTF-8

# Optional: Set the protocol
spring.mail.protocol=smtp

#global logging level restrict
#logging.level.root=error

#path where we want to restrict logging level
#  error > warn > info > debug > trace
# off
#logging.level.com.example.databaseRelation.Users=error